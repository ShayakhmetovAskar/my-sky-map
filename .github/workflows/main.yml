name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install front dependencies
        run: |
          cd frontend
          npm install

      # - name: Run front tests
      #   run: |
      #     cd frontend
      #     npm run test

      - name: Build front
        run: |
          cd frontend
          npm run build

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install backend dependencies
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt
      
      # - name: Run backend tests
      #   run: |
      #     cd backend
      #     pytest


      - name: Deploy to server
        if: ${{ success() }}
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./frontend/dist/*"     # Локальная папка dist
          target: "${{ secrets.REMOTE_PATH }}/frontend/dist"  # Копируем в dist на сервере
          overwrite: true

      - name: Deploy backend
        if: ${{ success() }}
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./backend/*"
          target: "${{ secrets.REMOTE_PATH }}/backend"
          overwrite: true

      - name: Restart service
        if: ${{ success() }}
        uses: appleboy/ssh-action@v0.1.11
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl restart my-sky-map-fastapi
